# # Maven
# # Build your Java project and run tests with Apache Maven.
# # Add steps that analyze code, save build artifacts, deploy, and more:
# # https://docs.microsoft.com/azure/devops/pipelines/languages/java

# trigger:
# - main

# pool:
#   vmImage: ubuntu-latest

# steps:
# - task: Maven@3
#   inputs:
#     mavenPomFile: 'pom.xml'
#     mavenOptions: '-Xmx3072m'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.8'
#     jdkArchitectureOption: 'x64'
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     goals: 'package'

trigger:
#- main
- develop

strategy:
  matrix:
    jdk10_linux:
      imageName: "ubuntu-latest"
      jdkVersion: "1.10"
    jdk11_windows:
      imageName: "windows-latest"
      jdkVersion: "1.11"
  maxParallel: 2

pool:
  vmImage: $(imageName)

# steps:
# - task: Maven@4
#   inputs:
#     mavenPomFile: "pom.xml"
#     mavenOptions: "-Xmx3072m"
#     javaHomeOption: "JDKVersion"
#     jdkVersionOption: $(jdkVersion)
#     jdkArchitectureOption: "x64"
#     publishJUnitResults: true
#     testResultsFiles: "**/TEST-*.xml"
#     goals: "package"

- stage: deploy
  jobs:
  - deployment: DeployWeb
    displayName: deploy Web App
    pool:
      vmImage: 'Ubuntu-latest'
    # creates an environment if it doesn't exist
    environment: 'Dev Env'
      resourceName: myVM
      resourceType: virtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo Hello world